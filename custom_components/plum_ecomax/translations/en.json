{
  "config": {
    "abort": {
      "unsupported_product": "Connected device is not supported",
      "discovery_failed": "Could not finish module discovery",
      "no_devices_found": "No devices found on the network",
      "already_configured": "Device is already configured"
    },
    "error": {
      "cannot_connect": "Failed to connect",
      "timeout_connect": "Timeout establishing connection",
      "unknown": "Unexpected error"
    },
    "progress": {
      "wait_for_device": "Establishing connection to the device...",
      "identify_device": "Checking the device model...",
      "discover_modules": "Discovering modules for the {model}..."
    },
    "step": {
      "user": {
        "menu_options": {
          "tcp": "Connect via network (TCP)",
          "serial": "Connect via serial (RS-485)"
        }
      },
      "serial": {
        "data": {
          "device": "Device",
          "baudrate": "Baudrate"
        }
      },
      "tcp": {
        "data": {
          "host": "Host",
          "port": "Port"
        }
      }
    }
  },
  "entity": {
    "binary_sensor": {
      "heating_pump": { "name": "Heating pump" },
      "water_heater_pump": { "name": "Water heater pump" },
      "circulation_pump": { "name": "Circulation pump" },
      "alert": { "name": "Alert" },
      "connection_status": { "name": "Connection status" },
      "fan": { "name": "Fan" },
      "exhaust_fan": { "name": "Exhaust fan" },
      "feeder": { "name": "Feeder" },
      "lighter": { "name": "Lighter" },
      "solar_pump": { "name": "Solar pump" },
      "fireplace_pump": { "name": "Fireplace pump" },
      "mixer_pump": { "name": "Mixer pump" },
      "circuit_pump": { "name": "Circuit pump" }
    },
    "button": {
      "detect_sub_devices": { "name": "Detect sub-devices" }
    },
    "climate": {
      "ecomax_climate": {
        "name": "Thermostat",
        "state_attributes": {
          "preset_mode": {
            "state": {
              "schedule": "Schedule",
              "airing": "Airing",
              "party": "Party",
              "holidays": "Holidays",
              "antifreeze": "Antifreeze"
            }
          }
        }
      }
    },
    "number": {
      "target_heating_temp": { "name": "Target heating temperature" },
      "min_heating_temp": { "name": "Minimum heating temperature" },
      "max_heating_temp": { "name": "Maximum heating temperature" },
      "grate_mode_temp": { "name": "Grate mode temperature" },
      "fuzzy_logic_min_power": { "name": "Fuzzy logic minimum power" },
      "fuzzy_logic_max_power": { "name": "Fuzzy logic maximum power" },
      "fuel_calorific_value": { "name": "Fuel calorific value" },
      "target_mixer_temp": { "name": "Target mixer temperature" },
      "min_mixer_temp": { "name": "Minimum mixer temperature" },
      "max_mixer_temp": { "name": "Maximum mixer temperature" },
      "target_circuit_temp": { "name": "Target circuit temperature" },
      "min_circuit_temp": { "name": "Minimum circuit temperature" },
      "max_circuit_temp": { "name": "Maximum circuit temperature" },
      "day_target_circuit_temp": { "name": "Day target circuit temperature" },
      "night_target_circuit_temp": { "name": "Night target circuit temperature" }
    },
    "select": {
      "summer_mode": {
        "name": "Summer mode",
        "state": {
          "on": "On",
          "off": "Off",
          "auto": "Auto"
        }
      },
      "mixer_work_mode": {
        "name": "Work mode",
        "state": {
          "off": "Off",
          "heating": "Heating",
          "heated_floor": "Heated floor",
          "pump_only": "Pump only"
        }
      }
    },
    "sensor": {
      "heating_temp": { "name": "Heating temperature" },
      "water_heater_temp": { "name": "Water heater temperature" },
      "outside_temp": { "name": "Outside temperature" },
      "heating_target": { "name": "Heating target temperature" },
      "water_heater_target": { "name": "Water heater target temperature" },
      "ecomax_state": {
        "name": "State",
        "state": {
          "off": "[%key:common::state::off%]",
          "fanning": "Fanning",
          "kindling": "Kindling",
          "heating": "Heating",
          "paused": "[%key:common::state::paused%]",
          "idle": "[%key:common::state::idle%]",
          "standby": "[%key:common::state::standby%]",
          "burning_off": "Burning Off",
          "alert": "Alert",
          "unknown": "Unknown"
        }
      },
      "service_password": { "name": "Service password" },
      "software_version": { "name": "Software version" },
      "uid": { "name": "UID" },
      "oxygen_level": { "name": "Oxygen level" },
      "power": { "name": "Power" },
      "fuel_level": { "name": "Fuel level" },
      "fuel_consumption": { "name": "Fuel consumption" },
      "load": { "name": "Load" },
      "fan_power": { "name": "Fan power" },
      "flame_intensity": { "name": "Flame intensity" },
      "feeder_temp": { "name": "Feeder temperature" },
      "exhaust_temp": { "name": "Exhaust temperature" },
      "return_temp": { "name": "Return temperature" },
      "lower_buffer_temp": { "name": "Lower buffer temperature" },
      "upper_buffer_temp": { "name": "Upper buffer temperature" },
      "lower_solar_temp": { "name": "Lower solar temperature" },
      "upper_solar_temp": { "name": "Upper solar temperature" },
      "fireplace_temp": { "name": "Fireplace temperature" },
      "mixer_temp": { "name": "Mixer temperature" },
      "mixer_target_temp": { "name": "Mixer target temperature" },
      "circuit_temp": { "name": "Circuit temperature" },
      "circuit_target_temp": { "name": "Circuit target temperature" },
      "total_fuel_burned": { "name": "Total fuel burned" },
      "ash_pan_full": { "name": "Ash pan full" }
    },
    "switch": {
      "controller_switch": { "name": "Controller switch" },
      "water_heater_disinfection_switch": { "name": "Water heater disinfection switch" },
      "water_heater_pump_switch": { "name": "Water heater pump switch" },
      "weather_control_switch": { "name": "Weather control switch" },
      "fuzzy_logic_switch": { "name": "Fuzzy logic switch" },
      "heating_schedule_switch": { "name": "Heating schedule switch" },
      "water_heater_schedule_switch": { "name": "Water heater schedule switch" },
      "enable_in_summer_mode": { "name": "Enable in summer mode" },
      "disable_pump_on_thermostat": { "name": "Disable pump on thermostat" },
      "enable_circuit": { "name": "Enable circuit" }
    },
    "water_heater": {
      "indirect_water_heater": { "name": "Indirect water heater" }
    }
  },
  "selector": {
    "schedule_type": {
      "options": {
        "heating": "Heating",
        "water_heater": "Water heater"
      }
    },
    "weekday": {
      "options": {
        "monday": "Monday",
        "tuesday": "Tuesday",
        "wednesday": "Wednesday",
        "thursday": "Thursday",
        "friday": "Friday",
        "saturday": "Saturday",
        "sunday": "Sunday"
      }
    }
  },
  "services": {
    "set_parameter": {
      "name": "Set parameter",
      "description": "Sets device parameter.",
      "fields": {
        "parameter_name": {
          "name": "Parameter name",
          "description": "Name of the parameter"
        },
        "value": {
          "name": "Value",
          "description": "A value that parameter will be set to"
        }
      }
    },
    "set_schedule": {
      "name": "Set schedule",
      "description": "Sets device schedule.",
      "fields": {
        "schedule_type": {
          "name": "Schedule type",
          "description": "Name of the schedule"
        },
        "weekday": {
          "name": "Weekday",
          "description": "Weekday to set the schedule"
        },
        "state": {
          "name": "State",
          "description": "State at scheduled time"
        },
        "start_time": {
          "name": "Start time",
          "description": "Time at which scheduled state will be set"
        },
        "end_time": {
          "name": "End time",
          "description": "Time at which scheduled state will be cleared"
        }
      }
    },
    "reset_meter": {
      "name": "Reset meter",
      "description": "Resets meter value."
    },
    "calibrate_meter": {
      "name": "Calibrate meter",
      "description": "Allows to calibrate meter by pre-setting it's value.",
      "fields": {
        "value": {
          "name": "Value",
          "description": "Sets meter to this value."
        }
      }
    }
  }
}