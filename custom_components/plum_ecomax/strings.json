{
  "config": {
    "abort": {
      "unsupported_product": "Connected device is not supported.",
      "discovery_failed": "Could not finish module discovery",
      "no_devices_found": "[%key:common::config_flow::abort::no_devices_found%]",
      "already_configured": "[%key:common::config_flow::abort::already_configured_device%]"
    },
    "error": {
      "cannot_connect": "[%key:common::config_flow::error::cannot_connect%]",
      "timeout_connect": "[%key:common::config_flow::error::timeout_connect%]",
      "unknown": "[%key:common::config_flow::error::unknown%]"
    },
    "progress": {
      "identify_device": "Checking the device model...",
      "discover_modules": "Discovering modules for the {model}..."
    },
    "step": {
      "user": {
        "title": "Choose a connection type",
        "menu_options": {
          "tcp": "Connect via network (TCP)",
          "serial": "Connect via serial (RS-485)"
        }
      },
      "serial": {
        "title": "Serial settings",
        "data": {
          "device": "Device",
          "baudrate": "Baudrate"
        }
      },
      "tcp": {
        "title": "Network settings",
        "data": {
          "host": "[%key:common::config_flow::data::host%]",
          "port": "[%key:common::config_flow::data::port%]"
        }
      }
    }
  },
  "entity": {
    "binary_sensor": {
      "heating_pump": { "name": "Heating pump" },
      "water_heater_pump": { "name": "Water heater pump" },
      "circulation_pump": { "name": "Circulation pump" },
      "alert": { "name": "Alert" },
      "connection_status": { "name": "Connection status" },
      "fan": { "name": "Fan" },
      "exhaust_fan": { "name": "Exhaust fan" },
      "feeder": { "name": "Feeder" },
      "lighter": { "name": "lighter" },
      "solar_pump": { "name": "Solar pump" },
      "fireplace_pump": { "name": "Fireplace pump" },
      "mixer_pump": { "name": "Mixer pump" },
      "circuit_pump": { "name": "Circuit pump" }
    },
    "climate": {
      "thermostat": {
        "name": "Thermostat",
        "state_attributes": {
          "preset_mode": {
            "state": {
              "schedule": "Schedule",
              "airing": "Airing",
              "party": "Party",
              "holidays": "Holidays",
              "antifreeze": "Antifreeze"
            }
          }
        }
      }
    },
    "number": {
      "target_heating_temp": { "name": "Target heating temperature" },
      "min_heating_temp": { "name": "Minimum heating temperature" },
      "max_heating_temp": { "name": "Maximum heating temperature" },
      "grate_mode_temp": { "name": "Grate mode temperature" },
      "fuzzy_logic_min_power": { "name": "Fuzzy logic minimum power" },
      "fuzzy_logic_max_power": { "name": "Fuzzy logic maximum power" },
      "fuel_calorific_value": { "name": "Fuel calorific value" },
      "target_mixer_temp": { "name": "Target mixer temperature" },
      "min_mixer_temp": { "name": "Minimum mixer temperature" },
      "max_mixer_temp": { "name": "Maximum mixer temperature" },
      "target_circuit_temp": { "name": "Target circuit temperature" },
      "min_circuit_temp": { "name": "Minimum circuit temperature" },
      "max_circuit_temp": { "name": "Maximum circuit temperature" },
      "day_target_circuit_temp": { "name": "Day target circuit temperature" },
      "night_target_circuit_temp": { "name": "Night target circuit temperature" }
    },
    "select": {
      "summer_mode": {
        "name": "Summer mode",
        "state": {
          "winter": "Winter",
          "summer": "Summer",
          "auto": "Auto"
        }
      },
      "mixer_work_mode": {
        "name": "Work mode",
        "state": {
          "off": "[%key:common::state::off%]",
          "heating": "Heating",
          "heated_floor": "Heated floor",
          "pump_only": "Pump only"
        }
      }
    },
    "sensor": {
      "heating_temp": { "name": "Heating temperature" },
      "water_heater_temp": { "name": "Water heater temperature" },
      "outside_temp": { "name": "Outside temperature" },
      "heating_target": { "name": "Heating target temperature" },
      "water_heater_target": { "name": "Water heater target temperature" },
      "ecomax_state": {
        "name": "State",
        "state": {
          "off": "[%key:common::state::off%]",
          "stabilization": "Stabilization",
          "kindling": "Kindling",
          "heating": "Heating",
          "paused": "[%key:common::state::paused%]",
          "idle": "[%key:common::state::idle%]",
          "standby": "[%key:common::state::standby%]",
          "burning_off": "Burning Off",
          "alert": "Alert",
          "unknown": "Unknown"
        },
        "state_attributes": {
          "numeric_state": { "name": "Numeric state" }
        }
      },
      "service_password": { "name": "Service password" },
      "connected_modules": {
        "name": "Connected modules",
        "state_attributes": {
          "panel": { "name": "Panel software version" },
          "module_a": { "name": "Module A software version" },
          "module_b": { "name": "Module B software version" },
          "module_c": { "name": "Module C software version" },
          "ecoster": { "name": "ecoSTER software version" },
          "ecolambda": { "name": "ecoLAMBDA software version" }
        }
      },
      "uid": { "name": "UID" },
      "oxygen_level": { "name": "Oxygen level" },
      "boiler_power": { "name": "Boiler power" },
      "fuel_level": { "name": "Fuel level" },
      "fuel_consumption": { "name": "Fuel consumption" },
      "boiler_load": { "name": "Boiler load" },
      "fan_power": { "name": "Fan power" },
      "flame_intensity": { "name": "Flame intensity" },
      "feeder_temp": { "name": "Feeder temperature" },
      "exhaust_temp": { "name": "Exhaust temperature" },
      "return_temp": { "name": "Return temperature" },
      "lower_buffer_temp": { "name": "Lower buffer temperature" },
      "upper_buffer_temp": { "name": "Upper buffer temperature" },
      "lower_solar_temp": { "name": "Lower solar temperature" },
      "upper_solar_temp": { "name": "Upper solar temperature" },
      "fireplace_temp": { "name": "Fireplace temperature" },
      "mixer_temp": { "name": "Mixer temperature" },
      "mixer_target_temp": { "name": "Mixer target temperature" },
      "mixer_valve_opening_percentage": { "name": "Mixer valve opening percentage" },
      "mixer_valve_state": {
        "name": "Mixer valve state",
        "state": {
          "off": "[%key:common::state::off%]",
          "closing": "Closing",
          "opening": "Opening",
          "unknown": "Unknown"
        }
      },
      "circuit_temp": { "name": "Circuit temperature" },
      "circuit_target_temp": { "name": "Circuit target temperature" },
      "total_fuel_burned": {
        "name": "Total fuel burned",
        "state_attributes": {
          "burned_since_last_update": { "name": "Burned since last update, g" }
        }
      },
      "ash_pan_full": { "name": "Ash pan full" }
    },
    "switch": {
      "controller_switch": { "name": "Controller switch" },
      "water_heater_disinfection_switch": { "name": "Water heater disinfection switch" },
      "water_heater_pump_switch": { "name": "Water heater pump switch" },
      "weather_control_switch": { "name": "Weather control switch" },
      "fuzzy_logic_switch": { "name": "Fuzzy logic switch" },
      "heating_schedule_switch": { "name": "Heating schedule switch" },
      "water_heater_schedule_switch": { "name": "Water heater schedule switch" },
      "enable_in_summer_mode": { "name": "Enable in summer mode" },
      "disable_pump_on_thermostat": { "name": "Disable pump on thermostat" },
      "enable_circuit": { "name": "Enable circuit" }
    },
    "water_heater": {
      "indirect_water_heater": { "name": "Indirect water heater" }
    }
  },
  "exceptions": {
    "invalid_parameter": {
      "message": "Invalid parameter selected ({parameter})"
    },
    "invalid_parameter_value": {
      "message": "Invalid value {value} for the {parameter} parameter"
    },
    "set_parameter_failed": {
      "message": "Request to set a parameter failed ({parameter})"
    },
    "set_parameter_timeout": {
      "message": "Request to set a parameter timed out ({parameter})"
    },
    "get_parameter_timeout": {
      "message": "Request to get a parameter timed out ({parameter})"
    },
    "parameter_not_found": {
      "message": "Requested parameter not found ({parameter})"
    },
    "schedule_not_found": {
      "message": "Requested schedule not found ({schedule})"
    },
    "invalid_schedule_interval": {
      "message": "Invalid interval selected for {schedule}. Got {start} to {end}."
    },
    "device_not_found": {
      "message": "Requested device not found ({device})"
    },
    "device_not_ready": {
      "message": "Device not ready ({device})"
    },
    "connection_timeout": {
      "message": "Timed out while trying to connect ({connection})"
    }
  },
  "options": {
    "step": {
      "entity_details": {
        "data": {
          "device_class": "Device class",
          "key": "Key",
          "mode": "Mode",
          "name": "[%key:common::config_flow::data::name%]",
          "state_class": "State class",
          "unit_of_measurement": "Unit of measurement",
          "update_interval": "Update interval"
        },
        "title": "Add a new {platform}"
      },
      "entity_type": {
        "menu_options": {
          "add_binary_sensor": "Binary sensor",
          "add_number": "Number",
          "add_sensor": "Sensor",
          "add_switch": "Switch"
        },
        "title": "Select an entity type"
      },
      "init": {
        "menu_options": {
          "add_entity": "Add a new entity",
          "edit_entity": "Edit/delete an entity",
          "reload": "Reload configuration"
        }
      }
    }
  },
  "selector": {
    "schedule_type": {
      "options": {
        "heating": "Heating",
        "water_heater": "Water heater"
      }
    },
    "weekdays": {
      "options": {
        "monday": "Monday",
        "tuesday": "Tuesday",
        "wednesday": "Wednesday",
        "thursday": "Thursday",
        "friday": "Friday",
        "saturday": "Saturday",
        "sunday": "Sunday"
      }
    },
    "preset": {
      "options": {
        "day": "Day",
        "night": "Night"
      }
    },
    "sensor_device_class": {
      "options": {
        "apparent_power": "[%key:component::sensor::entity_component::apparent_power::name%]",
        "aqi": "[%key:component::sensor::entity_component::aqi::name%]",
        "atmospheric_pressure": "[%key:component::sensor::entity_component::atmospheric_pressure::name%]",
        "battery": "[%key:component::sensor::entity_component::battery::name%]",
        "carbon_dioxide": "[%key:component::sensor::entity_component::carbon_dioxide::name%]",
        "carbon_monoxide": "[%key:component::sensor::entity_component::carbon_monoxide::name%]",
        "current": "[%key:component::sensor::entity_component::current::name%]",
        "data_rate": "[%key:component::sensor::entity_component::data_rate::name%]",
        "date": "[%key:component::sensor::entity_component::date::name%]",
        "distance": "[%key:component::sensor::entity_component::distance::name%]",
        "duration": "[%key:component::sensor::entity_component::duration::name%]",
        "energy": "[%key:component::sensor::entity_component::energy::name%]",
        "energy_storage": "[%key:component::sensor::entity_component::energy_storage::name%]",
        "frequency": "[%key:component::sensor::entity_component::frequency::name%]",
        "gas": "[%key:component::sensor::entity_component::gas::name%]",
        "humidity": "[%key:component::sensor::entity_component::humidity::name%]",
        "illuminance": "[%key:component::sensor::entity_component::illuminance::name%]",
        "irradiance": "[%key:component::sensor::entity_component::irradiance::name%]",
        "moisture": "[%key:component::sensor::entity_component::moisture::name%]",
        "monetary": "[%key:component::sensor::entity_component::monetary::name%]",
        "nitrogen_dioxide": "[%key:component::sensor::entity_component::nitrogen_dioxide::name%]",
        "nitrogen_monoxide": "[%key:component::sensor::entity_component::nitrogen_monoxide::name%]",
        "nitrous_oxide": "[%key:component::sensor::entity_component::nitrous_oxide::name%]",
        "ozone": "[%key:component::sensor::entity_component::ozone::name%]",
        "ph": "[%key:component::sensor::entity_component::ph::name%]",
        "pm1": "[%key:component::sensor::entity_component::pm1::name%]",
        "pm10": "[%key:component::sensor::entity_component::pm10::name%]",
        "pm25": "[%key:component::sensor::entity_component::pm25::name%]",
        "power": "[%key:component::sensor::entity_component::power::name%]",
        "power_factor": "[%key:component::sensor::entity_component::power_factor::name%]",
        "precipitation": "[%key:component::sensor::entity_component::precipitation::name%]",
        "precipitation_intensity": "[%key:component::sensor::entity_component::precipitation_intensity::name%]",
        "pressure": "[%key:component::sensor::entity_component::pressure::name%]",
        "reactive_power": "[%key:component::sensor::entity_component::reactive_power::name%]",
        "signal_strength": "[%key:component::sensor::entity_component::signal_strength::name%]",
        "sound_pressure": "[%key:component::sensor::entity_component::sound_pressure::name%]",
        "speed": "[%key:component::sensor::entity_component::speed::name%]",
        "sulphur_dioxide": "[%key:component::sensor::entity_component::sulphur_dioxide::name%]",
        "temperature": "[%key:component::sensor::entity_component::temperature::name%]",
        "timestamp": "[%key:component::sensor::entity_component::timestamp::name%]",
        "volatile_organic_compounds": "[%key:component::sensor::entity_component::volatile_organic_compounds::name%]",
        "voltage": "[%key:component::sensor::entity_component::voltage::name%]",
        "volume": "[%key:component::sensor::entity_component::volume::name%]",
        "volume_storage": "[%key:component::sensor::entity_component::volume_storage::name%]",
        "water": "[%key:component::sensor::entity_component::water::name%]",
        "weight": "[%key:component::sensor::entity_component::weight::name%]",
        "wind_speed": "[%key:component::sensor::entity_component::wind_speed::name%]"
      }
    },
    "sensor_state_class": {
      "options": {
        "measurement": "[%key:component::sensor::entity_component::_::state_attributes::state_class::state::measurement%]",
        "total": "[%key:component::sensor::entity_component::_::state_attributes::state_class::state::total%]",
        "total_increasing": "[%key:component::sensor::entity_component::_::state_attributes::state_class::state::total_increasing%]"
      }
    },
    "sensor_unit_of_measurement": {
      "options": {
        "none": "No unit of measurement"
      }
    },
    "binary_sensor_device_class": {
      "options": {
        "battery": "[%key:component::binary_sensor::entity_component::battery::name%]",
        "battery_charging": "[%key:component::binary_sensor::entity_component::battery_charging::name%]",
        "carbon_monoxide": "[%key:component::binary_sensor::entity_component::carbon_monoxide::name%]",
        "cold": "[%key:component::binary_sensor::entity_component::cold::name%]",
        "connectivity": "[%key:component::binary_sensor::entity_component::connectivity::name%]",
        "door": "[%key:component::binary_sensor::entity_component::door::name%]",
        "garage_door": "[%key:component::binary_sensor::entity_component::garage_door::name%]",
        "gas": "[%key:component::binary_sensor::entity_component::gas::name%]",
        "heat": "[%key:component::binary_sensor::entity_component::heat::name%]",
        "light": "[%key:component::binary_sensor::entity_component::light::name%]",
        "lock": "[%key:component::binary_sensor::entity_component::lock::name%]",
        "moisture": "[%key:component::binary_sensor::entity_component::moisture::name%]",
        "motion": "[%key:component::binary_sensor::entity_component::motion::name%]",
        "moving": "[%key:component::binary_sensor::entity_component::moving::name%]",
        "occupancy": "[%key:component::binary_sensor::entity_component::occupancy::name%]",
        "opening": "[%key:component::binary_sensor::entity_component::opening::name%]",
        "plug": "[%key:component::binary_sensor::entity_component::plug::name%]",
        "power": "[%key:component::binary_sensor::entity_component::power::name%]",
        "presence": "[%key:component::binary_sensor::entity_component::presence::name%]",
        "problem": "[%key:component::binary_sensor::entity_component::problem::name%]",
        "running": "[%key:component::binary_sensor::entity_component::running::name%]",
        "safety": "[%key:component::binary_sensor::entity_component::safety::name%]",
        "smoke": "[%key:component::binary_sensor::entity_component::smoke::name%]",
        "sound": "[%key:component::binary_sensor::entity_component::sound::name%]",
        "update": "[%key:component::binary_sensor::entity_component::update::name%]",
        "vibration": "[%key:component::binary_sensor::entity_component::vibration::name%]",
        "window": "[%key:component::binary_sensor::entity_component::window::name%]"
      }
    },
    "number_device_class": {
      "options": {
        "apparent_power": "[%key:component::sensor::entity_component::apparent_power::name%]",
        "aqi": "[%key:component::sensor::entity_component::aqi::name%]",
        "atmospheric_pressure": "[%key:component::sensor::entity_component::atmospheric_pressure::name%]",
        "battery": "[%key:component::sensor::entity_component::battery::name%]",
        "carbon_dioxide": "[%key:component::sensor::entity_component::carbon_dioxide::name%]",
        "carbon_monoxide": "[%key:component::sensor::entity_component::carbon_monoxide::name%]",
        "current": "[%key:component::sensor::entity_component::current::name%]",
        "data_rate": "[%key:component::sensor::entity_component::data_rate::name%]",
        "distance": "[%key:component::sensor::entity_component::distance::name%]",
        "energy": "[%key:component::sensor::entity_component::energy::name%]",
        "energy_storage": "[%key:component::sensor::entity_component::energy_storage::name%]",
        "frequency": "[%key:component::sensor::entity_component::frequency::name%]",
        "gas": "[%key:component::sensor::entity_component::gas::name%]",
        "humidity": "[%key:component::sensor::entity_component::humidity::name%]",
        "illuminance": "[%key:component::sensor::entity_component::illuminance::name%]",
        "irradiance": "[%key:component::sensor::entity_component::irradiance::name%]",
        "moisture": "[%key:component::sensor::entity_component::moisture::name%]",
        "nitrogen_dioxide": "[%key:component::sensor::entity_component::nitrogen_dioxide::name%]",
        "nitrogen_monoxide": "[%key:component::sensor::entity_component::nitrogen_monoxide::name%]",
        "nitrous_oxide": "[%key:component::sensor::entity_component::nitrous_oxide::name%]",
        "ozone": "[%key:component::sensor::entity_component::ozone::name%]",
        "ph": "[%key:component::sensor::entity_component::ph::name%]",
        "pm1": "[%key:component::sensor::entity_component::pm1::name%]",
        "pm10": "[%key:component::sensor::entity_component::pm10::name%]",
        "pm25": "[%key:component::sensor::entity_component::pm25::name%]",
        "power": "[%key:component::sensor::entity_component::power::name%]",
        "power_factor": "[%key:component::sensor::entity_component::power_factor::name%]",
        "precipitation": "[%key:component::sensor::entity_component::precipitation::name%]",
        "precipitation_intensity": "[%key:component::sensor::entity_component::precipitation_intensity::name%]",
        "pressure": "[%key:component::sensor::entity_component::pressure::name%]",
        "reactive_power": "[%key:component::sensor::entity_component::reactive_power::name%]",
        "signal_strength": "[%key:component::sensor::entity_component::signal_strength::name%]",
        "sound_pressure": "[%key:component::sensor::entity_component::sound_pressure::name%]",
        "speed": "[%key:component::sensor::entity_component::speed::name%]",
        "sulphur_dioxide": "[%key:component::sensor::entity_component::sulphur_dioxide::name%]",
        "temperature": "[%key:component::sensor::entity_component::temperature::name%]",
        "volatile_organic_compounds": "[%key:component::sensor::entity_component::volatile_organic_compounds::name%]",
        "voltage": "[%key:component::sensor::entity_component::voltage::name%]",
        "volume": "[%key:component::sensor::entity_component::volume::name%]",
        "volume_storage": "[%key:component::sensor::entity_component::volume_storage::name%]",
        "water": "[%key:component::sensor::entity_component::water::name%]",
        "weight": "[%key:component::sensor::entity_component::weight::name%]",
        "wind_speed": "[%key:component::sensor::entity_component::wind_speed::name%]"
      }
    },
    "number_mode": {
      "options": {
        "auto": "Auto",
        "box": "Box",
        "slider": "Slider"
      }
    },
    "number_unit_of_measurement": {
      "options": {
        "none": "No unit of measurement"
      }
    }
  },
  "services": {
    "get_parameter": {
      "name": "Get parameter",
      "description": "Gets device parameter.",
      "fields": {
        "name": {
          "name": "Name",
          "description": "Name of the parameter."
        }
      }
    },
    "set_parameter": {
      "name": "Set parameter",
      "description": "Sets device parameter.",
      "fields": {
        "name": {
          "name": "Name",
          "description": "Name of the parameter."
        },
        "value": {
          "name": "Value",
          "description": "A value that parameter will be set to."
        }
      }
    },
    "get_schedule": {
      "name": "Get schedule",
      "description": "Gets device schedule.",
      "fields": {
        "type": {
          "name": "Type",
          "description": "Type of the schedule."
        },
        "weekdays": {
          "name": "Weekdays",
          "description": "Weekdays to get the schedule."
        }
      }
    },
    "set_schedule": {
      "name": "Set schedule",
      "description": "Sets device schedule.",
      "fields": {
        "type": {
          "name": "Type",
          "description": "Type of the schedule."
        },
        "weekdays": {
          "name": "Weekdays",
          "description": "Weekdays to set the schedule."
        },
        "preset": {
          "name": "Preset",
          "description": "Preset at scheduled time."
        },
        "start_time": {
          "name": "Start time",
          "description": "Time at which scheduled state will be set."
        },
        "end_time": {
          "name": "End time",
          "description": "Time at which scheduled state will be cleared."
        }
      }
    },
    "reset_meter": {
      "name": "Reset meter",
      "description": "Resets meter value."
    },
    "calibrate_meter": {
      "name": "Calibrate meter",
      "description": "Allows to calibrate meter by pre-setting it's value.",
      "fields": {
        "value": {
          "name": "Value",
          "description": "Sets meter to this value."
        }
      }
    }
  }
}